iuyiuyi
q()
321+321
2137182378*13123
q()
q()
gotwd()
getwd()
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
View(japan.pop)
View(japan_pop_edited)
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
View(japan_pop_edited)
setwd(qa_class5_files)
getwd()
setwd(qa_class5_files)
setwd("qa_class5_files")
getwd
getwd()
setwd("qa_class5_files")
setwd("Quantitative Analysis R")
getwd()
ls()
setwd("clear(")
clear()
q()
setwd("/Users/TIZONA/Desktop/Political Text Analysis R/Class6_RScript")
Sys.setlocale("LC_ALL", 'en_GB.UTF-8')
Sys.setenv(LANG = "en_GB.UTF-8")
install.packages('corrplot')
install.packages('RColorBrewer')
install.packages("RColorBrewer")
library(tidyverse)
library(readtext)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textmodels)
library(quanteda.textplots)
library(corrplot)
library(ggrepel)
summary(data_corpus_inaugural)
inaugural_speeches <- corpus_subset(data_corpus_inaugural, Year > 1980)
summary(inaugural_speeches)
docvars(inaugural_speeches)
inaugural_speeches$FullName <- paste(inaugural_speeches$FirstName,
inaugural_speeches$President)
docvars(inaugural_speeches)
inaug_tokens <- inaugural_speeches %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(inaug_tokens)
inaug_dfm <- dfm(inaug_tokens)
inaug_dfm
set.seed(128)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1)
set.seed(128)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(230)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1)
# This would be a bit easier to see if we added some colours.
set.seed(230)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1)
# This would be a bit easier to see if we added some colours.
set.seed(128)
textplot_wordcloud(inaug_dfm, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
inaug_dfm %>%
dfm_group(groups = FullName) %>%
textplot_wordcloud(min_count = 10, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
inaug_dfm %>%
dfm_group(groups = Party) %>%
textplot_wordcloud(min_count = 20, comparison = TRUE,
color = RColorBrewer::brewer.pal(3, "Dark2"))
set.seed(128)
inaug_dfm %>%
dfm_group(groups = FullName) %>%
textplot_wordcloud(min_count = 10, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
inaug_dfm %>%
dfm_subset(Year > 2000) %>%
dfm_group(groups = FullName) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
inaug_simil <- textstat_simil(inaug_dfm, margin = "documents", method = "cosine")
inaug_simil
corrplot(as.matrix(inaug_simil), method = "number", type = "lower")
corrplot(as.matrix(inaug_simil), method = "number", type = "full")
corrplot(as.matrix(inaug_simil), method = "number", type = "lower")
corrplot(as.matrix(inaug_simil), method = "number", type = "lower",
is.corr = FALSE, col.lim = c(0.4, 1.0), col = COL1("Blues", 12))
dotchart(as.list(inaug_simil)$"2017-Trump", xlab = "Cosine similarity (Trump 2017)", pch = 19)
dotchart(as.list(inaug_simil)$"2021-Biden", xlab = "Cosine similarity (Biden 2021)", pch = 19)
inaug_dist <- textstat_dist(inaug_dfm, margin = "documents", method = "euclidean")
inaug_dist
inaug_cluster <- hclust(as.dist(inaug_dist))
inaug_cluster$labels <- docnames(inaug_dfm)
plot(inaug_cluster, xlab = "", sub = "", main = "Clustered by Euclidean Distance")
inaug_dist <- textstat_dist(inaug_dfm, margin = "documents", method = "manhaton")
inaug_dist <- textstat_dist(inaug_dfm, margin = "documents", method = "manhattan")
inaug_dist
inaug_cluster <- hclust(as.dist(inaug_dist))
inaug_cluster$labels <- docnames(inaug_dfm)
plot(inaug_cluster, xlab = "", sub = "", main = "Clustered by Euclidean Distance")
inaug_dist <- textstat_dist(inaug_dfm, margin = "documents", method = "euclidean")
inaug_dist
# We could do similar things with this data - dotcharts and so on - but one
# especially useful thing to do with distance matrices is clustering.
# By clustering documents, we can see groups of similar documents, and get an
# idea about the hierarchy of the documents we're working with.
inaug_cluster <- hclust(as.dist(inaug_dist))
inaug_cluster$labels <- docnames(inaug_dfm)
plot(inaug_cluster, xlab = "", sub = "", main = "Clustered by Euclidean Distance")
inaug_wf <- textmodel_wordfish(inaug_dfm, dir = c(7, 8))
textplot_scale1d(inaug_wf)
textplot_scale1d(inaug_wf, groups = docvars(inaug_dfm, "Party"))
wf_features <- data.frame(inaug_wf$features, inaug_wf$beta, inaug_wf$psi)
str(wf_features)
textplot_scale1d(inaug_wf, margin = "features")
head(wf_features[order(wf_features$inaug_wf.beta),], 30)
tail(wf_features[order(wf_features$inaug_wf.beta),], 30)
ggplot(wf_features, aes(inaug_wf.beta, inaug_wf.psi)) +
geom_point() +
theme_light() +
labs(title  = "Key Features in Inaugural Speeches",
x = "Estimated Beta",
y = "Estimated Psi") +
geom_text_repel(data = filter(wf_features, abs(inaug_wf.beta)>3),
aes(label = inaug_wf.features),
max.overlaps = 100)
q()
Sys.setlocale("LC_ALL", 'en_GB.UTF-8')
Sys.setenv(LANG = "en_GB.UTF-8")
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textmodels)
library(quanteda.textplots)
library(corrplot)
budget_speeches <- data_corpus_irishbudget2010
summary(budget_speeches)
docvars(budget_speeches)
budget_tokens <- budget_speeches %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(inaug_tokens)
head(budget_tokens)
budget_dfm <- dfm(budget_tokens)
budget_dfm
budget_simil <- textstat_simil(budget_dfm, margin = "documents", method = "cosine")
budget_simil
View(budget_simil)
corrplot(as.matrix(budget_simil), method = "number", type = "lower")
corrplot(as.matrix(inaug_simil), method = "number", type = "Full")
corrplot(as.matrix(inaug_simil), method = "number", type = "full")
corrplot(as.matrix(inaug_simil), method = "number", type = "full")
corrplot(as.matrix(budget_simil), method = "number", type = "full")
dotchart(as.list(inaug_simil)$"2017-Trump", xlab = "Cosine similarity (Trump 2017)", pch = 19)
View(budget_simil)
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Bruton, Richard (FG)", xlab = "Cosine similarity (Bruton, Richard (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Burton, Joan (LAB)", xlab = "Cosine similarity (Burton, Joan (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Morgan, Arthur (SF)", xlab = "Cosine similarity (Morgan, Arthur (SF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF))", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF)", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Bruton, Richard (FG)", xlab = "Cosine similarity (Bruton, Richard (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Burton, Joan (LAB)", xlab = "Cosine similarity (Burton, Joan (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Morgan, Arthur (SF)", xlab = "Cosine similarity (Morgan, Arthur (SF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF)", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Kenny, Enda (FG)", xlab = "Cosine similarity (Kenny, Enda (FG))", pch = 19)
dotchart(as.list(budget_simil)$"ODonnell, Kieran (FG)", xlab = "Cosine similarity (ODonnell, Kieran (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Gilmore, Eamon (LAB)", xlab = "Cosine similarity (Gilmore, Eamon (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Higgins, Michael (LAB)", xlab = "Cosine similarity (Higgins, Michael (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB) ", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB) ", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB)", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Bruton, Richard (FG)", xlab = "Cosine similarity (Bruton, Richard (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Burton, Joan (LAB)", xlab = "Cosine similarity (Burton, Joan (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Morgan, Arthur (SF)", xlab = "Cosine similarity (Morgan, Arthur (SF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF)", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Kenny, Enda (FG)", xlab = "Cosine similarity (Kenny, Enda (FG))", pch = 19)
dotchart(as.list(budget_simil)$"ODonnell, Kieran (FG)", xlab = "Cosine similarity (ODonnell, Kieran (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Gilmore, Eamon (LAB)", xlab = "Cosine similarity (Gilmore, Eamon (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Higgins, Michael (LAB)", xlab = "Cosine similarity (Higgins, Michael (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB)", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Gormley, John (Green)", xlab = "Cosine similarity (Gormley, John (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Ryan, Eamon (Green)", xlab = "Cosine similarity (Ryan, Eamon (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Cuffe, Ciaran (Green)", xlab = "Cosine similarity (Cuffe, Ciaran (Green))", pch = 19)
dotchart(as.list(budget_simil)$"OCaolain, Caoimhghin (SF)", xlab = "Cosine similarity (OCaolain, Caoimhghin (SF))", pch = 19)
budget_wf <- textmodel_wordfish(budget_dfm, dir = c(1, 2))
textplot_scale1d(budget_wf)
budget_wf <- textmodel_wordfish(budget_dfm, dir = c(2, 1))
textplot_scale1d(budget_wf)
docvars(budget_speeches)
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "Party"))
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "party"))
set.seed(128)
textplot_wordcloud(budget_dfm, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
warning()
docvars(budget_speeches)
set.seed(150)
inaug_dfm %>%
dfm_subset(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_subset(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_subset(groups = Party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_group(groups = Party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_subset(number = 01, 02, 05, 06, 07) %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
#dfm_subset(number = 01, 02, 05, 06, 07) %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_subset(party = FF, FG) %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_group(party = FF, FG) %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
textplot_wordcloud(budget_dfm, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfm %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
budget_tokensb2 <- budget_speeches %>%
corpus_subset(party %in% c("FF", "FG")) %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokensb2)
head(budget_tokensb2)
budget_dfmb2 <- dfm(budget_tokensb2)
budget_dfmb2
set.seed(128)
textplot_wordcloud(budget_dfmb2, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
textplot_wordcloud(budget_dfmb2, min_count = 20, random_order = FALSE, rotation = 0.1,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
docvars(budget_speeches)
budget_tokens <- budget_speeches %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokens)
budget_dfm <- dfm(budget_tokens)
budget_dfm
# Task 2
budget_simil <- textstat_simil(budget_dfm, margin = "documents", method = "cosine")
budget_simil
corrplot(as.matrix(budget_simil), method = "number", type = "full")
# Create the chat for each speech seperately
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Bruton, Richard (FG)", xlab = "Cosine similarity (Bruton, Richard (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Burton, Joan (LAB)", xlab = "Cosine similarity (Burton, Joan (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Morgan, Arthur (SF)", xlab = "Cosine similarity (Morgan, Arthur (SF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF)", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Kenny, Enda (FG)", xlab = "Cosine similarity (Kenny, Enda (FG))", pch = 19)
dotchart(as.list(budget_simil)$"ODonnell, Kieran (FG)", xlab = "Cosine similarity (ODonnell, Kieran (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Gilmore, Eamon (LAB)", xlab = "Cosine similarity (Gilmore, Eamon (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Higgins, Michael (LAB)", xlab = "Cosine similarity (Higgins, Michael (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB)", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Gormley, John (Green)", xlab = "Cosine similarity (Gormley, John (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Ryan, Eamon (Green)", xlab = "Cosine similarity (Ryan, Eamon (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Cuffe, Ciaran (Green)", xlab = "Cosine similarity (Cuffe, Ciaran (Green))", pch = 19)
dotchart(as.list(budget_simil)$"OCaolain, Caoimhghin (SF)", xlab = "Cosine similarity (OCaolain, Caoimhghin (SF))", pch = 19)
budget_wf <- textmodel_wordfish(budget_dfm, dir = c(2, 1))
textplot_scale1d(budget_wf)
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "party"))
budget_tokensb2 <- budget_speeches %>%
corpus_subset(party %in% c("FF", "FG")) %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokensb2)
budget_dfmb2 <- dfm(budget_tokensb2)
budget_dfmb2
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(128)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
budget_tokensb2 <- budget_speeches %>%
corpus_subset(party %in% c("FF", "FG")) %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokensb2)
budget_dfmb2 <- dfm(budget_tokensb2)
budget_dfmb2
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
###############################################################################
#        Waseda University :: School of Political Science & Economics         #
#            - Political Text Analysis [2023 Spring Semester] -               #
#             Instructor: Rob Fahey <robfahey@aoni.waseda.jp>                 #
###############################################################################
#             Assignment 03: Document Similarity and Scaling                  #
###############################################################################
# In Quanteda, there is a corpus called `data_corpus_irishbudget2010`
# This corpus contains speeches by Irish politicians in a debate about the
# national budget in 2010.
# The speeches have a number of document variables, including the name of
# the politician and the party they belong to.
# Your tasks are:
# 1) Prepare this corpus for analysis:
#        - Tokenise the corpus, remove stopwords, and stem the tokens.
#        - Construct a document-feature matrix.
# 2) Compare the speeches using Cosine Similarity, and create a graph
#    illustrating this similarity.
# 3) Using the Wordfish algorithm, scale these documents and place them
#    on a graph relative to one another.
#    This graph should group the speakers by Party.
# 4) Finally: the two biggest parties in Ireland at this time were Fianna
#    Fail (FF) and Fine Gael (FG). Create a Word Cloud which compares the
#    terminology used in the speeches of these two parties.
# Write the code for each one of these tasks in the file below, and submit
# this file on Moodle as your assignment. Do not submit any other files.
# You don't need to submit the figures, graphs etc., just the R code to
# create them.
# If you get stuck and can't complete a task, that's fine - show me what you
# tried to do, and write some comments explaining your understanding of the
# problem and what you tried to do to fix it. You can get a good grade even
# if you don't complete a task, as long as you show a solid effort being
# made to find a solution to the problem you encountered. Use Google, Stack
# Overflow, etc. - you may also use ChatGPT to debug your code if you're
# stuck, in which case you should include your chat log with ChatGPT in your
# submission file.
# I'll get you started...
Sys.setlocale("LC_ALL", 'en_GB.UTF-8')
Sys.setenv(LANG = "en_GB.UTF-8")
library(tidyverse)
library(quanteda)
library(quanteda.textstats)
library(quanteda.textmodels)
library(quanteda.textplots)
library(corrplot)
budget_speeches <- data_corpus_irishbudget2010
summary(budget_speeches)
# Now write the code to do tasks 1-4 above using the budget_speeches object.
# Task 1
docvars(budget_speeches)
budget_tokens <- budget_speeches %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokens)
budget_dfm <- dfm(budget_tokens)
budget_dfm
# Task 2
budget_simil <- textstat_simil(budget_dfm, margin = "documents", method = "cosine")
budget_simil
corrplot(as.matrix(budget_simil), method = "number", type = "full")
# Since the plot is too crowded, create the chat for each speech separately
dotchart(as.list(budget_simil)$"Lenihan, Brian (FF)", xlab = "Cosine similarity (Lenihan, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Bruton, Richard (FG)", xlab = "Cosine similarity (Bruton, Richard (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Burton, Joan (LAB)", xlab = "Cosine similarity (Burton, Joan (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Morgan, Arthur (SF)", xlab = "Cosine similarity (Morgan, Arthur (SF))", pch = 19)
dotchart(as.list(budget_simil)$"Cowen, Brian (FF)", xlab = "Cosine similarity (Cowen, Brian (FF))", pch = 19)
dotchart(as.list(budget_simil)$"Kenny, Enda (FG)", xlab = "Cosine similarity (Kenny, Enda (FG))", pch = 19)
dotchart(as.list(budget_simil)$"ODonnell, Kieran (FG)", xlab = "Cosine similarity (ODonnell, Kieran (FG))", pch = 19)
dotchart(as.list(budget_simil)$"Gilmore, Eamon (LAB)", xlab = "Cosine similarity (Gilmore, Eamon (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Higgins, Michael (LAB)", xlab = "Cosine similarity (Higgins, Michael (LAB))", pch = 19)
dotchart(as.list(budget_simil)$"Quinn, Ruairi (LAB)", xlab = "Cosine similarity (Quinn, Ruairi (LAB) )", pch = 19)
dotchart(as.list(budget_simil)$"Gormley, John (Green)", xlab = "Cosine similarity (Gormley, John (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Ryan, Eamon (Green)", xlab = "Cosine similarity (Ryan, Eamon (Green))", pch = 19)
dotchart(as.list(budget_simil)$"Cuffe, Ciaran (Green)", xlab = "Cosine similarity (Cuffe, Ciaran (Green))", pch = 19)
dotchart(as.list(budget_simil)$"OCaolain, Caoimhghin (SF)", xlab = "Cosine similarity (OCaolain, Caoimhghin (SF))", pch = 19)
# Task 3
budget_wf <- textmodel_wordfish(budget_dfm, dir = c(2, 1))
textplot_scale1d(budget_wf)
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "party"))
# Task 4
# Construct dfn with only the two largest party
budget_tokensb2 <- budget_speeches %>%
corpus_subset(party %in% c("FF", "FG")) %>%
tokens(remove_punct = TRUE, remove_symbols = TRUE,
remove_numbers = TRUE, remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en", source = "marimo")) %>%
tokens_wordstem(language = "en")
head(budget_tokensb2)
budget_dfmb2 <- dfm(budget_tokensb2)
budget_dfmb2
set.seed(150)
budget_dfmb2 %>%
dfm_group(groups = party) %>%
textplot_wordcloud(min_count = 20, max_size = 4, comparison = TRUE,
color = RColorBrewer::brewer.pal(8, "Dark2"))
textplot_scale1d(budget_wf)
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "party"))
budget_wf <- textmodel_wordfish(budget_dfm, dir = c(2, 1))
textplot_scale1d(budget_wf)
textplot_scale1d(budget_wf, groups = docvars(budget_dfm, "party"))
