iuyiuyi
q()
321+321
2137182378*13123
q()
q()
gotwd()
getwd()
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
View(japan.pop)
View(japan_pop_edited)
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
load("~/Desktop/Quantitative Analysis R/qa_class5_files/japan_pop_edited.RData")
View(japan_pop_edited)
setwd(qa_class5_files)
getwd()
setwd(qa_class5_files)
setwd("qa_class5_files")
getwd
getwd()
setwd("qa_class5_files")
setwd("Quantitative Analysis R")
getwd()
ls()
setwd("clear(")
clear()
q()
setwd("/Users/TIZONA/Desktop/Political Text Analysis R/Week11_files")
library(tidyverse)
library(readtext)
library(quanteda)
if(!require("keyATM")) {install.packages("keyATM"); library(keyATM)}
news <- readtext("guardian_21.csv", text_field = "Text")
news
View(news)
news$Month <- month(news$Date)   # Make a docvar for Month
news$MonthText <- month(news$Date, label = TRUE, abbr = TRUE)
news$text <- gsub("â€™", "'", news$text)
news_dfm <- news %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
split_hyphens = TRUE,
remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en")) %>%
tokens_wordstem(language = "en") %>%
dfm() %>%
dfm_remove(min_nchar=2) %>%
dfm_trim(min_docfreq = 20)
news_dfm
news_dfm <- news_dfm[ ntoken(news_dfm) > 0, ]
news_dfm
news_docs <- keyATM_read(texts = news_dfm)
summary(news_docs)
View(news_docs)
keywords <- list(
COVID_Vaccine  = c("vaccin", "pfizer", "moderna", "dose", "jab"),
COVID_Variants = c("variant", "omicron"),
Afghanistan    = c("afghanistan", "taliban", "kabul"),
Ukraine        = c("ukraine", "russia", "kyiv", "crimea"),
Healthcare     = c("patient", "nhs", "doctor", "hospit"),
Brexit_EU      = c("eu", "brexit", "barnier", "frost", "protocol"),
UK_Government  = c("johnson", "raab", "patel", "sunak"),
UK_Opposition  = c("starmer", "labour", "union"),
Energy         = c("gas", "coal", "oil", "tax", "energi"),
ExtremeWeather = c("flood", "storm", "temperatur"),
ClimateChange  = c("emiss", "climat", "ipcc"),
SocialMedia    = c("facebook", "twitter", "googl", "platform", "content"),
US_Politics    = c("trump", "biden", "senat", "republican", "democrat"),
Culture        = c("film", "music", "art", "artist")
)
visualize_keywords(docs = news_docs, keywords = keywords)
featnames(news_dfm) %>%
grep("^ukr", ., value = TRUE)
featnames(news_dfm) %>%
grep("^ky", ., value = TRUE)
featnames(news_dfm) %>%
grep("^ki", ., value = TRUE)
featnames(news_dfm) %>%
grep("^barn", ., value = TRUE)
featnames(news_dfm) %>%
grep("^astra", ., value = TRUE)
keywords <- list(
COVID_Vaccine  = c("vaccin", "pfizer", "astrazeneca", "dose", "jab"),
COVID_Variants = c("variant", "omicron"),
Afghanistan    = c("afghanistan", "taliban", "kabul"),
Ukraine        = c("ukrain", "russia", "crimea"),
Healthcare     = c("patient", "nhs", "doctor", "hospit"),
Brexit_EU      = c("eu", "brexit", "frost", "protocol"),
UK_Government  = c("johnson", "raab", "patel", "sunak"),
UK_Opposition  = c("starmer", "labour", "union"),
Energy         = c("gas", "coal", "oil", "tax", "energi"),
ExtremeWeather = c("flood", "storm", "temperatur"),
ClimateChange  = c("emiss", "climat", "ipcc"),
SocialMedia    = c("facebook", "twitter", "googl", "platform", "content"),
US_Politics    = c("trump", "biden", "senat", "republican", "democrat"),
Culture        = c("film", "music", "art", "artist")
)
visualize_keywords(docs = news_docs, keywords = keywords)
news_key <- keyATM(
docs              = news_docs,
no_keyword_topics = 6,              # number of topics without keywords
keywords          = keywords,
model             = "base",
options           = list(seed = 250,
iterations = 250)
)
top_words(news_key, measure = "probability")
top_words(news_key, measure = "lift")
plot_topicprop(news_key)
top_words(news_key, measure = "lift")
top_words(news_key, measure = "probability")
top_words(news_key, measure = "lift")
plot_topicprop(news_key)
docvars(news_dfm)$Month
news_dynamic <- keyATM(
docs              = news_docs,
no_keyword_topics = 6,              # number of topics without keywords
keywords          = keywords,
model             = "dynamic",
model_settings    = list(time_index = docvars(news_dfm)$Month,
num_states = 12),
options           = list(seed = 250,
iterations = 250)
)
plot_topicprop(news_dynamic)
plot_timetrend(news_dynamic, time_index_label = docvars(news_dfm)$MonthText)
