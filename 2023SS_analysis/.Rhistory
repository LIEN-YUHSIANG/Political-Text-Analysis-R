plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 2,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 4,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 5,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 6,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = speech_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 8,
model = speech_stm,
printlegend = FALSE)
speech_stm_basic_corr <- topicCorr(speech_stm_basic)
plot.topicCorr(speech_stm_basic_corr, vlabels = speechBasic_names)
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm,
printlegend = FALSE,
title = "1")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm,
printlegend = FALSE,
) + title("1")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm,
printlegend = FALSE,
) + title("topic 1")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm,
printlegend = FALSE) + title("Month effect topic 1")
plot(monthEffects, "Month",
method = "continuous", topics = 2,
model = speech_stm,
printlegend = FALSE) + title("Month effect topic 2")
# Month Effects
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE) + title("Month effect topic 1")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE)+
title("Month effect topic 1")
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm_struc,
printlegend = FALSE,
title("2"))
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm_struc,
printlegend = FALSE,
title("2"))
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "sss")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "sss")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of War Casualities")
plot.STM(speech_stm_struc, type = "summary",
topic.names = speechStruc_names, custom.labels = "")
speechStruc_names <- c("War Casualties",
"Effect of War on Energy Food",
"Motivation for Ukraine People",
"International Assist",
"Russian Attack",
"Russian War Crime",
"Ukraine Military Operation",
"Siutation of War"
)
plot.STM(speech_stm_struc, type = "summary",
topic.names = speechStruc_names, custom.labels = "")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of War Casualities")
plot(monthEffects, "Month",
method = "continuous", topics = 2,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Effect of War on Energy Food")
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Motivation for Ukraine People")
plot(monthEffects, "Month",
method = "continuous", topics = 4,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of International Assist")
plot(monthEffects, "Month",
method = "continuous", topics = 5,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Russian Attack")
plot(monthEffects, "Month",
method = "continuous", topics = 6,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Russian War Crime")
plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Ukraine Military Operation")
plot(monthEffects, "Month",
method = "continuous", topics = 8,
model = speech_stm_struc,
printlegend = FALSE,
main = "Month Effect of Siutation of War")
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "1 Month Effect of War Casualities")
plot(monthEffects, "Month",
method = "continuous", topics = 2,
model = speech_stm_struc,
printlegend = FALSE,
main = "2 Month Effect of Effect of War on Energy Food")
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm_struc,
printlegend = FALSE,
main = "3 Month Effect of Motivation for Ukraine People")
plot(monthEffects, "Month",
method = "continuous", topics = 4,
model = speech_stm_struc,
printlegend = FALSE,
main = "4 Month Effect of International Assist")
plot(monthEffects, "Month",
method = "continuous", topics = 5,
model = speech_stm_struc,
printlegend = FALSE,
main = "5 Month Effect of Russian Attack")
plot(monthEffects, "Month",
method = "continuous", topics = 6,
model = speech_stm_struc,
printlegend = FALSE,
main = "6 Month Effect of Russian War Crime")
plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = speech_stm_struc,
printlegend = FALSE,
main = "7 Month Effect of Ukraine Military Operation")
plot(monthEffects, "Month",
method = "continuous", topics = 8,
model = speech_stm_struc,
printlegend = FALSE,
main = "(8 Month Effect of Siutation of War")
typeEffects <- estimateEffect( 1:8 ~ Type,
speech_stm_struc,
meta = speech_stm_dfm$meta,
uncertainty = "Global" )
unique(speech_stm_dfm$meta$Type)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "D", cov.value2 = "I",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.2, .2), labeltype = "custom",
custom.labels = speechStruc_names)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "D", cov.value2 = "I",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.3, .3), labeltype = "custom",
custom.labels = speechStruc_names)
unique(news_stm_dfm$meta$Section)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "D", cov.value2 = "I",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.3, .3), labeltype = "custom",
custom.labels = speechStruc_names)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "I", cov.value2 = "D",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.3, .3), labeltype = "custom",
custom.labels = speechStruc_names)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "D", cov.value2 = "I",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.3, .3), labeltype = "custom",
custom.labels = speechStruc_names)
setwd("/Users/TIZONA/Desktop/Political-Text-Analysis-R/Week10_files")
news <- readtext("guardian_21.csv", text_field = "Text")
news
news$Month <- month(news$Date)
news$Day <- day(news$Date)
news$text <- gsub("’", "'", news$text)
news_dfm <- news %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
split_hyphens = TRUE,
remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en")) %>%
tokens_wordstem(language = "en") %>%
dfm() %>%
dfm_remove(min_nchar=2)
news_dfm
news_dfm_trim[ ntoken(news_dfm_trim) == 0, ]
news$Month <- month(news$Date)
news$Day <- day(news$Date)
# As with all our previous analysis work, we first change any 'smart' apostrophes
# (which Quanteda doesn't know how to handle) into simple apostrophes, then
# convert the data into a corpus, tokenise it, and build a document-feature matrix.
news$text <- gsub("’", "'", news$text)
news_dfm <- news %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
split_hyphens = TRUE,
remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en")) %>%
tokens_wordstem(language = "en") %>%
dfm() %>%
dfm_remove(min_nchar=2)
news_dfm
# This DFM has more than 60,000 features (i.e., unique words) which is definitely
# far too many - processing this would be very challenging. Let's trim it down
# to a more reasonable number. We can probably assume that any major news topic
# will have appeared in at least 20 articles, so we remove any term that doesn't
# appear across 20 documents.
news_dfm_trim <- dfm_trim(news_dfm, min_docfreq = 20)
news_dfm_trim
# This reduces our feature space to 8,537 - a lot more reasonable. We could
# probably reduce it even further if we wanted to, but let's stick with this
# for now.
# One final thing. Having removed so much vocabulary, it's possible that there
# are now some articles in the corpus (especially short articles) that don't
# have any vocabulary left in the DFM at all - in other words, their vector
# representation is entirely full of zeros. We can't create a topic model for
# those documents (they're literally blank as far as the algorithm knows) so
# we remove them from the DFM.
# Let's check for that:
news_dfm_trim[ ntoken(news_dfm_trim) == 0, ]
# Here we see that 33 documents are now entirely blank. We have to remove those.
news_dfm_trim <- news_dfm_trim[ ntoken(news_dfm_trim) > 0, ]
news_dfm_trim
news_dfm_trim[ ntoken(news_dfm_trim) == 0, ]
# Here we see that 33 documents are now entirely blank. We have to remove those.
news_dfm_trim <- news_dfm_trim[ ntoken(news_dfm_trim) > 0, ]
news_dfm_trim
news_stm_dfm <- convert(news_dfm_trim,
to = "stm",
docvars( news_dfm_trim, c("Section", "Month", "Headline") )
)
set.seed(456)
news_stm <- stm(news_stm_dfm$documents,
news_stm_dfm$vocab,
K = 15,
prevalence =~ Section + s(Month),
data = news_stm_dfm$meta,
max.em.its = 100)
news_stm_corr <- topicCorr(news_stm)
plot.topicCorr(news_stm_corr, vlabels = newsStruc_names)
labelTopics( news_stm, n = 6)
plot.STM(news_stm_basic, type = "summary", labeltype = c("frex"), n=5)
newsStruc_names <- c("Health Care",
"Medical Research",
"Calture",
"Afganistan",
"Natural Disaster",
"UK Opposition",
"Covid-19",
"SNS",
"Nature",
"Policing",
"US Politics",
"Energy",
"UK Gov",
"Cost of living",
"Supply Chain")
# How does the correlation map look now?
news_stm_corr <- topicCorr(news_stm)
plot.topicCorr(news_stm_corr, vlabels = newsStruc_names)
monthEffects <- estimateEffect( 1:15 ~ s(Month),
news_stm,
meta = news_stm_dfm$meta,
uncertainty = "Global" )
plot(monthEffects, "Month",
method = "continuous", topics = 4,
model = news_stm,
printlegend = FALSE)
plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = news_stm,
printlegend = FALSE)
sectionEffects <- estimateEffect( 1:15 ~ Section,
news_stm,
meta = news_stm_dfm$meta,
uncertainty = "Global" )
unique(news_stm_dfm$meta$Section)
plot(sectionEffects, covariate = "Section", topics = 1:15,
model = news_stm, method = "difference",
cov.value1 = "News", cov.value2 = "Business",
xlab = "More Business ... More News",
main = "Effect of News vs. Business sections",
xlim = c(-.2, .2), labeltype = "custom",
custom.labels = newsStruc_names)
setwd("/Users/TIZONA/Desktop/Political-Text-Analysis-R/2023SS_analysis")
library(tidyverse)
library(readtext)
library(quanteda)
library(quanteda.textmodels)
library(stm)
library(topicmodels)
library(wordcloud)
# Load data in
speech <- readtext("./SF/*.txt",
docvarsfrom = "filenames",
dvsep = "_",
docvarnames = c("Date", "Value", "Type", "Num"))
speech$Month <- month(speech$Date)
speech$Day <- day(speech$Date)
speech$text <- gsub("’", "'", speech$text)
# Create dfm
speech_dfm <- speech %>%
corpus() %>%
tokens(remove_punct = TRUE,
remove_symbols = TRUE,
remove_numbers = TRUE,
remove_separators = TRUE) %>%
tokens_remove(stopwords(language = "en")) %>%
tokens_wordstem(language = "en") %>%
dfm() %>%
dfm_remove(min_nchar=2)
# Trim DFM
speech_dfm_trim <- dfm_trim(speech_dfm, min_docfreq = 20)
speech_dfm_trim[ ntoken(speech_dfm_trim) == 0, ]
# All document are not empty
speech_dfm_trim
# Train STM
head(docvars(speech_dfm_trim))
speech_stm_dfm <- convert(speech_dfm_trim,
to = "stm",
docvars( speech_dfm_trim, c("Type", "Month", "Day") )
)
# 10 topics
set.seed(123)
speech_stm_basic <- stm(speech_stm_dfm$documents,
speech_stm_dfm$vocab,
K = 10)
labelTopics( speech_stm_basic, n = 10)
plot.STM(speech_stm_basic, type = "summary", labeltype = c("frex"), n=5)
plot.STM(speech_stm_basic, type = "hist", labeltype = c("frex"))
# 6 topics
set.seed(123)
speech_stm_basic <- stm(speech_stm_dfm$documents,
speech_stm_dfm$vocab,
K = 6)
labelTopics( speech_stm_basic, n = 6)
plot.STM(speech_stm_basic, type = "summary", labeltype = c("frex"), n=5)
plot.STM(speech_stm_basic, type = "hist", labeltype = c("frex"))
# 8 topics
set.seed(123)
speech_stm_basic <- stm(speech_stm_dfm$documents,
speech_stm_dfm$vocab,
K = 8)
labelTopics( speech_stm_basic, n = 8)
plot.STM(speech_stm_basic, type = "summary", labeltype = c("frex"), n=5)
plot.STM(speech_stm_basic, type = "hist", labeltype = c("frex"))
# Naming 8 topics
speechBasic_names <- c("War Casualties",
"Effect of War on Energy Food",
"Motivate Ukraine People",
"International Assist",
"Russian Attack",
"Russia War Crime",
"Ukraine Military Operation",
"Siutation of War"
)
plot.STM(speech_stm_basic, type = "summary",
topic.names = speechBasic_names, custom.labels = "")
# Topic correlation
speech_stm_basic_corr <- topicCorr(speech_stm_basic)
plot.topicCorr(speech_stm_basic_corr, vlabels = speechBasic_names)
# Add structure to model
set.seed(456)
speech_stm_struc <- stm(speech_stm_dfm$documents,
speech_stm_dfm$vocab,
K = 8,
prevalence =~ Type + s(Month),
data = speech_stm_dfm$meta,
max.em.its = 100)
labelTopics( speech_stm_struc, n = 20)
speechStruc_names <- c("War Casualties",
"Effect of War on Energy Food",
"Motivation for Ukraine People",
"International Assist",
"Russian Attack",
"Russian War Crime",
"Ukraine Military Operation",
"Siutation of War"
)
plot.STM(speech_stm_struc, type = "summary",
topic.names = speechStruc_names, custom.labels = "")
# Topic correlation
speech_stm_corr <- topicCorr(speech_stm_struc)
plot.topicCorr(speech_stm_corr, vlabels = speechStruc_names)
# Estimating effect
monthEffects <- estimateEffect( 1:8 ~ s(Month),
speech_stm_struc,
meta = speech_stm_dfm$meta,
uncertainty = "Global" )
# Month Effects
plot(monthEffects, "Month",
method = "continuous", topics = 1,
model = speech_stm_struc,
printlegend = FALSE,
main = "1 Month Effect of War Casualities")
plot(monthEffects, "Month",
method = "continuous", topics = 2,
model = speech_stm_struc,
printlegend = FALSE,
main = "2 Month Effect of Effect of War on Energy Food")
plot(monthEffects, "Month",
method = "continuous", topics = 3,
model = speech_stm_struc,
printlegend = FALSE,
main = "3 Month Effect of Motivation for Ukraine People")
plot(monthEffects, "Month",
method = "continuous", topics = 4,
model = speech_stm_struc,
printlegend = FALSE,
main = "4 Month Effect of International Assist")
plot(monthEffects, "Month",
method = "continuous", topics = 5,
model = speech_stm_struc,
printlegend = FALSE,
main = "5 Month Effect of Russian Attack")
plot(monthEffects, "Month",
method = "continuous", topics = 6,
model = speech_stm_struc,
printlegend = FALSE,
main = "6 Month Effect of Russian War Crime")
plot(monthEffects, "Month",
method = "continuous", topics = 7,
model = speech_stm_struc,
printlegend = FALSE,
main = "7 Month Effect of Ukraine Military Operation")
plot(monthEffects, "Month",
method = "continuous", topics = 8,
model = speech_stm_struc,
printlegend = FALSE,
main = "8 Month Effect of Siutation of War")
# Type effect on Domestic and international
typeEffects <- estimateEffect( 1:8 ~ Type,
speech_stm_struc,
meta = speech_stm_dfm$meta,
uncertainty = "Global" )
unique(speech_stm_dfm$meta$Type)
plot(typeEffects, covariate = "Type", topics = 1:8,
model = speech_stm_struc, method = "difference",
cov.value1 = "D", cov.value2 = "I",
xlab = "More D ... More I",
main = "Effect of Domestic vs. International Types",
xlim = c(-.3, .3), labeltype = "custom",
custom.labels = speechStruc_names)
